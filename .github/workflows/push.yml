on: 
  push:
    branches:
      - master
  workflow_dispatch:
name: Deploy workflow
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true
jobs:
  install:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      # https://github.com/actions/deploy-pages
      pages: write
      id-token: write
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set git commit sha
        id: revparse
        run: |
          echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Install deps
        run: npm install --legacy-peer-deps
      - name: Build
        run: npm run build
      - name: Create Release
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Create Tar Ball
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
        run: tar cJf yacd.tar.xz public
      - name: Upload Release Asset
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./yacd.tar.xz
          asset_name: yacd.tar.xz
          asset_content_type: application/x-gzip

